Bit wise toolkit:
	exactly one bit in bit vector = bv & (1-bv) == 0
	toggle the ith bit = 
	ith index mask = 1 << index
		if you're trying to turn a 0 --> 1 (i.e. ((bv & mask) == 0)) = bv |= mask
		else if you're trying to turn a 1 --> 0 = (bv &= ~mask)
		
LinkedList:
	detect if have loop = slow/fast runner 
		if hop over (i.e. i   / i+1 then i -1 = (i+1)-2 --> guarantee)

Reverse an int:

public int reverse(int x) {
    int rev = 0;
    while(x != 0){
        rev = rev*10 + x%10;
        x /= 10;
    }
 
    return rev;
}